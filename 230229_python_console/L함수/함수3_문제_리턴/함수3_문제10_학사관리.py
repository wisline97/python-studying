'''
drop table 학과;
drop table 학생;
drop table 과목;
drop table 수강내역;
drop table 교수;

CREATE TABLE 학과 (
    번호 NUMBER ,
    이름 VARCHAR2(24) 
);

CREATE TABLE 교수 (
    번호 NUMBER ,
    이름 VARCHAR2(9) ,
    학과번호 NUMBER 
);

CREATE TABLE 학생(
    번호 NUMBER ,
    이름 VARCHAR2(9) ,
    주소 VARCHAR2(15),
    학년 NUMBER,
    키 NUMBER,
    몸무게 NUMBER,
    상태 VARCHAR2(6),
    입력일자 DATE,
    학과번호 NUMBER 
);

CREATE TABLE 과목(
    번호 NUMBER ,
    이름 VARCHAR2(33),
    학점 NUMBER,
    교수번호 NUMBER
);

CREATE TABLE 수강내역(
    학생번호 NUMBER NOT NULL,
    과목번호 NUMBER NOT NULL,
    점수 NUMBER,
    등급 VARCHAR2(6)
);

INSERT INTO 학과 VALUES(1, '소프트웨어공학과');
INSERT INTO 학과 VALUES(2, '컴퓨터공학과');
INSERT INTO 학과 VALUES(3, '경영정보학과');
INSERT INTO 학과 VALUES(4, '경영학과');
INSERT INTO 학과 VALUES(5, '연극영화학과');
INSERT INTO 학과 VALUES(6, '철학과');
SELECT * FROM 학과;

INSERT INTO 교수 VALUES(1, '이해진', 1);
INSERT INTO 교수 VALUES(2, '김정주', 1);
INSERT INTO 교수 VALUES(3, '김이숙', 1);
INSERT INTO 교수 VALUES(4, '이석호', 2);
INSERT INTO 교수 VALUES(5, '김사부', 3);
INSERT INTO 교수 VALUES(6, '장미희', 5);
INSERT INTO 교수 VALUES(7, '백남영', 5);
INSERT INTO 교수 VALUES(8, '김현이', 5);
INSERT INTO 교수 VALUES(9, '이사부', 5);

SELECT * FROM 교수;

INSERT INTO 과목 VALUES(1, '데이터베이스관리', 3, 3);
INSERT INTO 과목 VALUES(2, '데이터베이스프로그래밍', 3, 3);
INSERT INTO 과목 VALUES(3, 'SQL활용', 3, 4);
INSERT INTO 과목 VALUES(4, '데이터베이스', 4, 5);
INSERT INTO 과목 VALUES(5, '인터넷마케팅', 3, 5);
INSERT INTO 과목 VALUES(6, '연기실습', 2, 7);
INSERT INTO 과목 VALUES(7, '영화제작실습', 2, 8);
INSERT INTO 과목 VALUES(8, '영화마케팅', 1, 9);
SELECT * FROM 과목;

INSERT INTO 학생(번호,이름,주소,학년,키,몸무게,상태,입력일자,학과번호)
VALUES(1, '김이향', '인천남동구', 4, 166, 56, '재학', '2005-03-01',5);
INSERT INTO 학생(번호,이름,주소,학년,키,몸무게,상태,입력일자,학과번호)
VALUES(6, '박지은', '서울양천구', 2, 183, 65, '재학', '2015-02-14',3);
INSERT INTO 학생(번호,이름,주소,학년,키,몸무게,상태,입력일자,학과번호)
VALUES(7, '안칠현', '서울금천구', 1, 178, 65, '재학', '2016-02-19',1);
INSERT INTO 학생(번호,이름,주소,학년,키,몸무게,상태,입력일자,학과번호)
VALUES(8, '김태희', '서울구로구', 1, 165, 45, '재학', '2016-02-19',3);
INSERT INTO 학생(번호,이름,주소,학년,키,몸무게,상태,입력일자,학과번호)
VALUES(9, '채영', '서울구로구', 1, 172, 47, '재학', '2016-02-19',2);
INSERT INTO 학생(번호,이름,주소,학년,키,몸무게,상태,입력일자,학과번호)
VALUES(11, '영란', '서울강남구', 1, 162, 43, '재학', '2016-02-19',5);
INSERT INTO 학생(번호,이름,주소,학년,키,몸무게,상태,입력일자,학과번호)
VALUES(12, '윤호', '서울강남구', 1, 184, 66, '휴학', '2016-08-10',1);
INSERT INTO 학생(번호,이름,주소,학년,키,몸무게,상태,입력일자,학과번호)
VALUES(13, '보아', '서울구로구', 1, 162, 45, '재학', '2016-02-19',1);
INSERT INTO 학생(번호,이름,주소,학년,키,몸무게,상태,입력일자,학과번호)
VALUES(14, '문근영', '서울강남구', 1, 165, 45, '재학', '2016-02-19',3);
INSERT INTO 학생(번호,이름,주소,학년,상태,입력일자,학과번호)
VALUES(3, '이세영', '서울구로구', 4, '재학', '2013-03-01',4);
INSERT INTO 학생(번호,이름,주소,학년,상태,입력일자,학과번호)
VALUES(4, '문주원', '경기부천시', 3, '재학', '2014-02-13',3);
INSERT INTO 학생(번호,이름,주소,학년,상태,입력일자,학과번호)
VALUES(5, '성춘향', '서울영등포구', 3, '재학', '2014-02-13',5);
INSERT INTO 학생(번호,이름,학년,키,몸무게,상태,입력일자,학과번호)
VALUES(10, '박수애', 1, 168, 46, '재학', '2016-02-19',2);
INSERT INTO 학생(번호,이름,주소,학년,키,상태,입력일자,학과번호)
VALUES(2, '박보검', '인천부평구', 4, 168, '재학', '2010-03-01',6);
SELECT * FROM 학생;

INSERT INTO 수강내역 VALUES(7, 1, 84.5, 'B');
INSERT INTO 수강내역 VALUES(12, 1, 50, 'F');
INSERT INTO 수강내역 VALUES(13, 1, 90, 'A');
INSERT INTO 수강내역 VALUES(7, 2, 80, 'B');
INSERT INTO 수강내역 VALUES(13, 2, 94.5, 'A');
INSERT INTO 수강내역 VALUES(9, 3, 90, 'A');
INSERT INTO 수강내역 VALUES(10, 3, 70, 'C');
INSERT INTO 수강내역 VALUES(4, 4, 90, 'A');
INSERT INTO 수강내역 VALUES(6, 4, 55, 'F');
INSERT INTO 수강내역 VALUES(8, 4, 85, 'B');
INSERT INTO 수강내역 VALUES(14, 4, 95, 'A');
INSERT INTO 수강내역 VALUES(4, 5, 70, 'C');
INSERT INTO 수강내역 VALUES(6, 5, 95, 'A');
INSERT INTO 수강내역 VALUES(8, 5, 90, 'A');
INSERT INTO 수강내역 VALUES(14, 5, 95, 'A');
INSERT INTO 수강내역 VALUES(6, 8, 90, 'A');
INSERT INTO 수강내역 VALUES(8, 8, 80, 'B');
INSERT INTO 수강내역 VALUES(14, 8, 90, 'A');
INSERT INTO 수강내역 VALUES(1, 6, 85, 'B');
INSERT INTO 수강내역 VALUES(5, 6, 80, 'B');
INSERT INTO 수강내역 VALUES(11, 6, 78.5, 'C');
INSERT INTO 수강내역 VALUES(1, 7, 95, 'A');
INSERT INTO 수강내역 VALUES(5, 7, 85, 'B');
INSERT INTO 수강내역 VALUES(1, 8, 100, 'A');
SELECT * FROM 수강내역;

COMMIT;



-1. 학생 테이블의 모든 열을 검색하라


-2. 학생 테이블의 이름, 학년, 주소 열만 선택적으로 검색하라


- as 는 컬럼(변수) 명을 임시로 변경하는것이다. 
-3. 학생 테이블의 이름과 주소 열만 검색하라(단, 이름 열은 화면에 성명으로 표시하고 주소 열은 현재 주소지로 표시한다)


- DISTINCT 는 중복숫자를 제거해준다.
-4. 학생 테이블의 학년 열을 검색하다(단, 중복되는 행은 딱 한 번만 출력한다)


-5. 학생 번호가 1인 학생을 검색하라


-6. 키가 165 미만인 학생을 검색하라


-7. 1학년이고 동시에 키가 170 이상인 학생의 이름, 학년, 키, 몸무게 열을 검색하라


-8. 1학년이거나 또는 키가 170 이상인 학생의 이름, 학년, 키, 몸무게 열을 검색


-9. 몸무게 45보다 크거나 같고 50보다 작거나 같은 학생의 이름, 주소, 키, 몸무게 열을 검색하되, 
BETWEEN 키워드를 사용하라


-10. 몸무게 45보다 크거나 같고 50보다 작거나 같은 학생의 이름, 주소, 키, 몸무게 열을 검색하되, 
AND 연산자를 사용


-11. 학생의 번호, 이름, 학년열을 검색하라(단, 검색결과에는 2학년과 3학년만 포함되어야 하며, 
반드시 IN 연산자를 사용하여야 한다)


-12. 학생의 번호, 이름, 학년열을 검색하라(단, 검색 결과에는 2학년과 3학년만 포함되어야 하며, 
반드시 OR 연산자를 사용하여야 한다)


-13. 박씨 성을 가진 학생의 모든 열을 검색하라


-14. 김씨, 이씨, 박씨 성을 가진 학생 모두를 검색하되 반드시 LIKE 연산자를 사용하라


-15. 김씨, 이씨, 박씨 성을 가진 학생 모두를 검색하되 반드시 UNION을 사용하라


-16. 주소 데이터가 없는 학생의 이름, 학년, 주소를 검색하라


-17. 몸무게 데이터가 있는 학생의 성명, 학년, 몸무게를 검색하라


-18. 학생 테이블에서 모든 열에 저장된 데이터를 검색하되, 이름 가나다순으로 정렬하여 출력하라


-19. 학생의 이름, 주소, 키 데이터를 검색하되 키가 큰 학생부터 출력하라


-20. 1학년 학생의 이름, 학년, 주소, 몸무게 데이터를 검색하라(단 ,반드시 체중이 적은 학생부터 출력하라)


-21. 1학년 학생의 이름, 학년, 키, 몸무게 데이터를 검색하라(단, 키 내림차순으로 정렬하고, 같은 키는 몸무게 오름차순으로 정렬)


-22. 학생의 번호, 이름, 주소를 검색하되 이름을 가나다 순으로 정렬해라


-23. 학생 테이블에서 '문주원' 학생과 학년이 동일한 모든 학생의 이름과 키, 몸무게를 검색하라


-24. 1번 학과 학생들의 평균 키보다 작은 학생의 이름, 학년, 키를 검색하라


-25. '김태희' 학생과 학년이 같고, '김태희' 학생보다 큰 학생의 이름, 학년, 키를 검색


-26. 키가 165인 학생의 번호, 이름, 키를 검색하라



-27. 학생의 수를 검색하라(단, 출력 결과 열은 학생수로 표시한다)



28. 박씨 성을 가진 학생 중에서 몸무게 정보가 있는 학생의 수를 검색하라
(단, 출력결과 열은 '몸무게 정보가 있는 학생수'로 표시한다)


-29. 번호가 1인 과목의 평균 점수를 검색하라


-30. 과목별 평균 점수를 검색하라(단, 두 번째 출력 결과 열은 '과목평균점수'로 표시한다)


-31. 전체 학생을 소속 학과별로 나누고, 같은 학과 학생은 다시 학년별로 그룹핑한 후, 
학과별 , 학년별 인원수, 평균키를 검색하라 
(단, 세 번째 출력 결과 열은 '인원수'로 표시하고, 네번째 열은 '평균키'로 표시한다)



-32. 누적학생 수가 네 명 이상인 과목의 평균 점수를 검색하라
 (단, 두 번째 출력 결과열은 '누적학생수'로 표시하고 세 번째 열은 '과목평균점수'로 표시한다)



-33. 과목 평균 점수가 높은 행부터 출력되도록 6번 문제를 해결하는 SQL 명령문 변경하라



-34. 학생들의 학번, 이름, 소속학과 이름을 검색하라



-35. 교수의 번호, 이름, 소속 학과 이름을 검색하라



-36. '김이향' 학생의 번호, 이름, 소속 학과 이름을 검색하라



-37. 키가 180 이상인 학생의 번호, 이름, 키, 소속 학과 이름을 검색하라




-38. 학과별 교수별 개설 과목 목록 정보인 학과 이름, 교수 이름, 과목 이름을 검색하라



-39. 학과별 개설 과목 목록 정보인 학과 이름, 과목 이름을 검색하라


'''